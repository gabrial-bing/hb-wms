<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hb.upms.mapper.DeliveryOrderDOMapper">
  <resultMap id="BaseResultMap" type="com.hb.upms.model.DeliveryOrderDO">
    <!--@mbg.generated-->
    <!--@Table delivery_order-->
    <id column="delivery_order_id" jdbcType="INTEGER" property="deliveryOrderId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="material_id" jdbcType="VARCHAR" property="materialId" />
    <result column="material_num" jdbcType="INTEGER" property="materialNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    delivery_order_id, order_id, material_id, material_num, `status`
  </sql>
  <select id="selectByExample" parameterType="com.hb.upms.model.DeliveryOrderDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from delivery_order
    where delivery_order_id = #{deliveryOrderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from delivery_order
    where delivery_order_id = #{deliveryOrderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hb.upms.model.DeliveryOrderDOExample">
    <!--@mbg.generated-->
    delete from delivery_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="delivery_order_id" keyProperty="deliveryOrderId" parameterType="com.hb.upms.model.DeliveryOrderDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into delivery_order (order_id, material_id, material_num, 
      `status`)
    values (#{orderId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{materialNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="delivery_order_id" keyProperty="deliveryOrderId" parameterType="com.hb.upms.model.DeliveryOrderDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into delivery_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="materialNum != null">
        material_num,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="materialNum != null">
        #{materialNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hb.upms.model.DeliveryOrderDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from delivery_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update delivery_order
    <set>
      <if test="record.deliveryOrderId != null">
        delivery_order_id = #{record.deliveryOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNum != null">
        material_num = #{record.materialNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update delivery_order
    set delivery_order_id = #{record.deliveryOrderId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      material_num = #{record.materialNum,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hb.upms.model.DeliveryOrderDO">
    <!--@mbg.generated-->
    update delivery_order
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="materialNum != null">
        material_num = #{materialNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where delivery_order_id = #{deliveryOrderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hb.upms.model.DeliveryOrderDO">
    <!--@mbg.generated-->
    update delivery_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=VARCHAR},
      material_num = #{materialNum,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where delivery_order_id = #{deliveryOrderId,jdbcType=INTEGER}
  </update>
</mapper>